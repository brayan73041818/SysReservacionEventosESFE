@model IEnumerable<SysReservacionEventosESFE.EntidadesDeNegocio.Evento>

@{
    ViewData["Title"] = "Index";
    int numPage = 1;
    int numRegistros = 0;
    int numRegistrosPorPage = 10;
    int[] tops = { 10, 20, 50, 100, 500, 1000, 10000, -1 };
    int topActual = Convert.ToInt32(ViewBag.Top);
    List<SysReservacionEventosESFE.EntidadesDeNegocio.Usuario> usuario = ViewBag.Usuario as List<SysReservacionEventosESFE.EntidadesDeNegocio.Usuario>;
    List<SysReservacionEventosESFE.EntidadesDeNegocio.Carrera> carrera = ViewBag.Carrera as List<SysReservacionEventosESFE.EntidadesDeNegocio.Carrera>;
    List<SysReservacionEventosESFE.EntidadesDeNegocio.Institucion> institucion = ViewBag.Institucion as List<SysReservacionEventosESFE.EntidadesDeNegocio.Institucion>;
    List<SysReservacionEventosESFE.EntidadesDeNegocio.EspaciosA> espacios = ViewBag.Espacios as List<SysReservacionEventosESFE.EntidadesDeNegocio.EspaciosA>;
    List<SysReservacionEventosESFE.EntidadesDeNegocio.Evento> eventos = ViewBag.Evento as List<SysReservacionEventosESFE.EntidadesDeNegocio.Evento>;


}


<h1>Buscar</h1>

<div class="col-md-12">
    <form asp-action="Index">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label class="control-label">Responsable</label>
                    <input type="text" class="form-control" name="responsable" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label class "control-label">Carrera</label>
                    <select name="IdCarrera" class="form-control">
                        <option selected value="0">SELECCIONAR</option>
                        @foreach (var item in carrera)
                        {
                            <option value="@item.IdCarrera">@item.Nombre</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label class="control-label">Espacios</label>
                    <select name="IdEspaciosA" class="form-control">
                        <option selected value="0">SELECCIONAR</option>
                        @foreach (var item in espacios)
                        {
                            <option value="@item.IdEspaciosA">@item.Nombre</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label class="control-label">Institucion</label>
                    <select name="IdInstitucion" class="form-control">
                        <option selected value="0">SELECCIONAR</option>
                        @foreach (var item in institucion)
                        {
                            <option value="@item.IdInstitucion">@item.Nombre</option>
                        }
                    </select>
                </div>
            </div>

            <div class="col-md-2">
                <label for="fechaInicio" class="control-label">Fecha de Inicio</label>
                <input type="date" id="fInicio" name="fInicio" class="form-control" />
            </div>

            <div class="col-md-2">
                <label for="fechaFin" class="control-label">Fecha de Fin</label>
                <input type="date" id="fFinal" name="fFinal" class="form-control" />
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label class="control-label">Top</label>
                    <select name="top_aux" class="form-control">
                        @foreach (var item in tops)
                        {
                            string strItem = item != -1 ? item.ToString() : "Todos";
                            if (item != topActual)
                            {
                                <option value="@item">@strItem</option>
                            }
                            else
                            {
                                <option selected value="@item">@strItem</option>
                            }
                        }
                    </select>
                </div>
            </div>
        </div>

        <div class="form-group" style="margin-top: 10px;">
            <button type="submit" class="btn btn-primary" style="background-color: #0074D9; color: white;">
                <i class="fas fa-search"></i> Buscar
            </button>

                <button type="button" class="btn btn-success" onclick="window.location.href='@Url.Action("Reserva")'">
                    <i class="fas fa-plus"></i> Agregar
            </button>
            
          
            


        </div>

    </form>
</div>

@*<table class="table table-responsive paginationjs" style="margin-left:-5%">
    <thead>
        <tr>


            <th>
                @Html.DisplayNameFor(model => model.Responsable)
            </th>



            <th>
                @Html.DisplayNameFor(model => model.Descripcion)
            </th>

            <th>
                Numero de asistentes
            </th>

            <th>
                Fecha del evento
            </th>

            <th>
                Hora de inicio
            </th>

            <th>
                Hora de fin
            </th>

            <th>
                Espacio
            </th>

            <th>
                Institucion
            </th>

            <th>
                Carrera
            </th>
            <th>
                Reservo
            </th>

            <th colspan="3">Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr data-page="@numPage">

                <td>
                    @Html.DisplayFor(modelItem => item.Responsable)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descripcion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NAsistentes)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FechaEvento)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HoraInicio)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HoraFin)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.EspaciosA.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Carrera.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Institucion.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Usuario.Nombre)
                </td>

                @*BOTONES CRUD EDITAR - LEER - ELIMINAR PRODUCTO*@


              @*  <td class="botonestabla">
                    <button type="button" class="btn btn-primary" style="background-color: #264DA0; color: white" onclick="window.location.href='@Url.Action("Edit", new { IdEvento = item.IdEvento })'">
                        <i class="fas fa-pencil-alt"></i> Modificar
                    </button>
                </td>


                <td class="botonestabla">
                    <button type="button" class="btn btn-info" onclick="window.location.href='@Url.Action("Details", new { IdEvento = item.IdEvento })'">
                        <i class="fas fa-eye"></i> Detalles
                    </button>
                </td>
                <td class="botonestabla">
                    <button type="button" class="btn btn-danger" onclick="window.location.href='@Url.Action("Delete", new { IdEvento= item.IdEvento})'">
                        <i class="fas fa-trash"></i> Eliminar
                    </button>
                </td>

            </tr>
            numRegistros++;
            if (numRegistros == numRegistrosPorPage)
            {
                numPage++;
                numRegistros = 0;
            }
        }
        @{
            if (numRegistros == 0)
            {
                numPage--;
            }
        }
    </tbody>
</table>

<script>
    // Variables para almacenar las fechas seleccionadas
    let fechaInicioSeleccionada = null;
    let fechaFinSeleccionada = null;

    document.addEventListener('DOMContentLoaded', function () {
        let añoActual = new Date().getFullYear();
        let mesActual = new Date().getMonth();

        const calendarioContainer = document.getElementById('calendario');

        // Función para actualizar el contenido del calendario
        function actualizarCalendario() {
            const fecha = new Date(añoActual, mesActual, 1);

            const diasEnMes = new Date(añoActual, mesActual + 1, 0).getDate();
            const primerDia = fecha.getDay();

            const meses = [
                'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',
                'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'
            ];

            const diasSemana = ['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'];

            calendarioContainer.innerHTML = '';

            const mesContainer = document.createElement('div');
            mesContainer.classList.add('mes');

            const header = document.createElement('h2');
            header.textContent = `${meses[mesActual]} ${añoActual}`;
            mesContainer.appendChild(header);

            const botonesMes = document.createElement('div');
            botonesMes.innerHTML = `
                              <button onclick="cambiarMes(-1)">&#8249;</button>
                              <button onclick="cambiarMes(1)">&#8250;</button>
                            `;
            header.appendChild(botonesMes);

            const diasSemanaContainer = document.createElement('div');
            diasSemanaContainer.classList.add('dias-semana');
            diasSemana.forEach(function (dia) {
                const diaSemana = document.createElement('div');
                diaSemana.textContent = dia;
                diasSemanaContainer.appendChild(diaSemana);
            });

            mesContainer.appendChild(diasSemanaContainer);

            const diasContainer = document.createElement('div');
            diasContainer.classList.add('dias');

            for (let i = 0; i < primerDia; i++) {
                const diaVacio = document.createElement('div');
                diasContainer.appendChild(diaVacio);
            }

            for (let i = 1; i <= diasEnMes; i++) {
                const dia = document.createElement('div');
                dia.textContent = i;

                // Marcar fechas seleccionadas con color verde
                if (fechaInicioSeleccionada && fechaInicioSeleccionada.getDate() === i) {
                    dia.classList.add('fecha-seleccionada');
                }

                dia.addEventListener('click', function () {
                    // Aquí puedes agregar lógica al hacer clic en un día
                    console.log(`Día clickeado: ${i}`);
                    // Guardar la fecha seleccionada en la variable correspondiente
                    if (!fechaInicioSeleccionada) {
                        fechaInicioSeleccionada = new Date(añoActual, mesActual, i);
                    } else if (!fechaFinSeleccionada) {
                        fechaFinSeleccionada = new Date(añoActual, mesActual, i);
                    } else {
                        // Reiniciar las fechas si ambas ya están seleccionadas
                        fechaInicioSeleccionada = null;
                        fechaFinSeleccionada = null;
                    }
                    // Actualizar el calendario
                    actualizarCalendario();
                });

                // Agregar evento mouseover para mostrar mensaje en fechas reservadas
                if (fechaInicioSeleccionada && fechaInicioSeleccionada.getDate() === i) {
                    dia.addEventListener('mouseover', function () {
                        if (fechaInicioSeleccionada) {
                            console.log('LA FECHA ESTÁ RESERVADA');
                        }
                    });
                }

                diasContainer.appendChild(dia);
            }

            mesContainer.appendChild(diasContainer);
            calendarioContainer.appendChild(mesContainer);
        }

        // Función para cambiar el mes
        window.cambiarMes = function (incremento) {
            mesActual += incremento;

            if (mesActual > 11) {
                mesActual = 0;
                añoActual++;
            } else if (mesActual < 0) {
                mesActual = 11;
                añoActual--;
            }

            actualizarCalendario();
        };

        // Inicializar el calendario
        actualizarCalendario();
    });

    // Función para marcar la fecha seleccionada en el calendario y actualizar dinámicamente
    function marcarFechaSeleccionadaEnCalendario() {
        const fechaInicioInput = document.getElementById('horaInicio');
        const fechaInicioSeleccionada = new Date(fechaInicioInput.value);

        // Verificar si se ha seleccionado una fecha válida
        if (!isNaN(fechaInicioSeleccionada.getTime())) {
            const diaSeleccionado = fechaInicioSeleccionada.getDate();
            const mesSeleccionado = fechaInicioSeleccionada.getMonth();
            const añoSeleccionado = fechaInicioSeleccionada.getFullYear();

            // Buscar el día en el calendario y marcarlo
            const dias = document.querySelectorAll('.dias > div');
            dias.forEach(function (dia) {
                if (dia.textContent === diaSeleccionado.toString()) {
                    dia.classList.add('fecha-seleccionada');
                    dia.addEventListener('mouseover', function () {
                        console.log('LA FECHA ESTÁ RESERVADA');
                    });
                }
            });

            // Actualizar el calendario de forma dinámica
            actualizarCalendario();
        }
    }

</script>
*@
<div class="customer-container">
    @foreach (var item in eventos)
    {
        <div class="customer-card">
            <div class="customer-heading">Evento Registrado</div>
            <div class="customer-details">
                <div class="customer-name">Fecha: @item.FechaEvento.ToString("dd/MM/yyyy")</div>
                <div class="customer-name">Inicio: @item.HoraInicio.ToString("hh:mm tt")</div>
                <div class="customer-name">Fin: @item.HoraFin.ToString("hh:mm tt")</div>
                <div class="customer-name">Descripcion: @item.Descripcion</div>
                <div class="customer-name">Carrera: @item.Carrera.Nombre</div>
                <div class="customer-name">Espacio: @item.EspaciosA.Nombre</div>
          

            </div>
            <div class="customer-buttons">
               
                
                    <button type="button" class="btn btn-primary" style="background-color: #264DA0; color: white" onclick="window.location.href='@Url.Action("Edit", new { IdEvento = item.IdEvento })'">
                        <i class="fas fa-pencil-alt"></i> Modificar
                    </button>               
                    <button type="button" class="btn btn-info"  onclick="window.location.href='@Url.Action("Details", new { IdEvento = item.IdEvento })'">
                        <i class="fas fa-eye"></i> Detalles
                    </button>
                    <button type="button" class="btn btn-danger" onclick="window.location.href='@Url.Action("Delete", new { IdEvento= item.IdEvento})'">
                        <i class="fas fa-trash"></i> Eliminar
                </button>
                
         
            </div>
        </div>
    }
</div>
